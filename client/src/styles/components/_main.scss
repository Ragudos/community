:root {
    --max-content-width: #{$max-content-width};
}

body {
    --_min-height: calc(100dvh - 4rem);
    font-family: "Roboto", system-ui, sans-serif;
    min-height: var(--_min-height);
}

@include themify($themes) {
    body {
        color: color_in_theme("text");
        background-color: color_in_theme("background");
    }

    color-scheme: $theme_name;
}

main {
    margin-block: 2rem;
}

h1:first-child,
h2:first-child,
h3:first-child,
h4:first-child,
h5:first-child,
h6:first-child,
p:first-child {
    margin-block-start: 0;
}

h1:last-child,
h2:last-child,
h3:last-child,
h4:last-child,
h5:last-child,
h6:last-child,
p:last-child {
    margin-block-end: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
.title-sm,
.title-md,
.title-lg {
    hyphens: auto;
    line-height: 2rem;
    font-weight: 500;
}

h1 {
    font-size: 2.027rem;
    margin-block: 0.75rem;
}

h2, .title-lg {
    font-size: 1.802rem;
    margin-block: 0.675rem;
}

h3.title-md {
    font-size: 1.602rem;
    margin-block: 0.5rem;
}

h4, .title-sm {
    font-size: 1.424rem;
    margin-block: 0.375rem;
}

h5 {
    font-size: 1.266rem;
    margin-block: 0.25rem;
}

h6 {
    font-size: 1.125rem;
    margin-block: 0.175rem;
}

p {
    font-size: 1rem;
    margin-block: 0.075rem;
}

@include s-large {
    h1 {
        font-size: 2.986rem;
    }

    h2, .title-lg {
        font-size: 2.488rem;
    }

    h3, .title-md {
        font-size: 2.074rem;
    }

    h4, .title-sm {
        font-size: 1.728rem;
    }

    h5 {
        font-size: 1.44rem;
    }

    h6 {
        font-size: 1.2rem;
    }
}

.skeleton {
    --_max-opacity: 0.25;
    animation-duration: 2s;
    animation-iteration-count: infinite;
    animation-delay: var(--_delay, 0ms);
    animation-direction: alternate;
    animation-fill-mode: forwards;
    display: inline-block;
    height: 1em;
    position: relative;
    overflow: hidden;
}

.skeleton.shimmer {
    &:after {
        position: absolute;
        inset: 0;
        transform: translateX(-100%);
        animation-duration: 2s;
        animation-iteration-count: infinite;
        animation-delay: var(--_delay, 0);
        animation-name: shimmer;
        content: "";
    }
}

.skeleton.fade {
    animation-name: fade;
}

@include themify($themes) {
    .skeleton {
        background-color: color_in_theme("skeleton") !important;
    }

    .skeleton.shimmer {
        &:after {
            background-image: linear-gradient(
                90deg,
                rgba(color_in_theme("skeleton-shimmer"), 0) 0,
                rgba(color_in_theme("skeleton-shimmer"), 0.2) 20%,
                rgba(color_in_theme("skeleton-shimmer"), 0.5) 60%,
                rgba(color_in_theme("skeleton-shimmer"), 0)
            ) !important;
        }
    }
}

button,
input,
textarea,
select,
a {
    border-radius: calc($radius / 2);
}

input,
textarea {
    border: 1px solid;

    padding: 0.5rem 0.75rem;
}

button,
input[type=submit],
a {
    @include flex-center(inline-flex);

    padding: 0.5rem 1rem;
    min-width: 7.5ch;
    min-height: 5ch;
}

button.primary,
input[type=submit].primary,
a.primary,
button.secondary,
input[type=submit].secondary,
a.secondary,
button.accent,
input[type=submit].accent,
a.accent,
button.destructive,
input[type=submit].destructive {
    will-change: background-color;
    transition-property: background-color;
    transition-duration: 500ms;
}

.link {
    will-change: opacity, text-decoration;
    transition-property: opacity, text-decoration;
    transition-duration: 500ms;
    padding: 0;
    min-height: auto;
    min-width: auto;
}

.link:hover {
    text-decoration: underline;
    text-underline-offset: 4px;
    opacity: 0.87;
}

button:disabled,
input[type=submit]:disabled,
a:disabled {
    cursor: not-allowed;
    opacity: 0.5;
}

@include themify($themes) {
    .link {
        color: color_in_theme("link");
    }

    input,
    textarea {
        border-color: rgba(color_in_theme("input"), 0.675);

        &:focus-visible {
            border-color: color_in_theme("input");
        }
    }

    .error.errored + input,
    .error.errored + textarea {
        border-color: rgba(color_in_theme("destructive"), 0.675);

        &:focus-visible {
            border-color: color_in_theme("destructive");
        }
    }

    button.primary,
    input[type=submit].primary,
    a.primary {
        background-color: color_in_theme("primary");
        color: color_in_theme("primary-foreground");

        &:hover {
            background-color: rgba(color_in_theme("primary"), 0.87);
        }

        &:active {
            background-color: rgba(color_in_theme("primary"), 0.75);
        }

        &:disabled {
            background-color: rgba(color_in_theme("primary"), 0.5);
            opacity: 0.5;
        }
    }

    button.secondary,
    input[type=submit].secondary,
    a.secondary {
        background-color: color_in_theme("secondary");
        color: color_in_theme("secondary-foreground");

        &:hover {
            background-color: rgba(color_in_theme("secondary"), 0.87);
        }

        &:active {
            background-color: rgba(color_in_theme("secondary"), 0.75);
        }

        &:disabled {
            background-color: rgba(color_in_theme("primary"), 0.5);
            opacity: 0.5;
        }
    }

    button.accent,
    input[type=submit].accent,
    a.accent {
        background-color: color_in_theme("accent");
        color: color_in_theme("accent-foreground");

        &:hover {
            background-color: rgba(color_in_theme("accent"), 0.87);
        }

        &:active {
            background-color: rgba(color_in_theme("accent"), 0.75);
        }

        &:disabled {
            background-color: rgba(color_in_theme("primary"), 0.5);
            opacity: 0.5;
        }
    }

    button.destructive,
    input[type=submit].destructive,
    a.destructive {
        background-color: color_in_theme("destructive");
        color: color_in_theme("destructive-foreground");

        &:hover {
            background-color: rgba(color_in_theme("destructive"), 0.87);
        }

        &:active {
            background-color: rgba(color_in_theme("destructive"), 0.75);
            background-color: rgba(color_in_theme("destructive"), 0.87);
        }

        &:disabled {
            background-color: rgba(color_in_theme("primary"), 0.5);
            opacity: 0.5;
        }
    }

    button,
    input,
    a,
    textarea,
    select {
        &:focus-visible {
            box-shadow: 0px 0px 0px 3px color_in_theme("background"), 0px 0px 0px 4px color_in_theme("ring");
        }
    }
}

button.icon {
    min-width: $icon;
    min-height: $icon;
    padding: 0;
}

.hidden {
    display: none !important;
}

.label {
    font-weight: 500;
    cursor: pointer;
    font-size: 1.075rem;
}

.error {
    color: red;
}

@include themify($themes) {
    .spinner {
        width: 1rem;
        height: 1rem;
        display: inline-block;
        border-radius: 50%;
        border: 2px solid;
        border-color: rgba(color_in_theme("text"), 0.075);
        border-right-color: rgba(color_in_theme("text"), 0.87);
    }

}

svg {
	fill: currentColor;
}

.background {
    @include cover_background
}

.header {
    padding-top: 1rem;
    padding-bottom: 0.5rem;
    margin-bottom: 0.5rem;
}

.header > * {
    display: flex;
    justify-content: space-between;
    gap: 1rem;
    align-items: center;
}

@include themify($themes) {
    .header {
        background-color: color_in_theme("harder-background");
    }   
}
